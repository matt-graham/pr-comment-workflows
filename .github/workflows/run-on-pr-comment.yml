name: Run test triggered by pull-request comment

on:
  workflow_call:
    inputs:
      keyword:
        required: true
        type: string
      description:
        required: true
        type: string
      run_test:
        required: true
        type: string

jobs:
  run_test_on_keyword_and_reply_with_status:
    runs-on: ubuntu-latest
    if: github.event.issue.pull_request && github.event.comment.body == format('/run {0}', inputs.keyword)
    steps:
    - name: Check permissions of commenting user
      id: has_permissions
      uses: actions/github-script@v4
      with:
        script: |
          const { owner, repo, number } = context.issue;
          const commenter = context.payload.comment.user.login;
          const response = await github.repos.getCollaboratorPermissionLevel({
            owner: owner,
            repo: repo,
            username: commenter,
          });
          const permission_level = response.data.permission;
          console.log(permission_level);
          return (permission_level == 'admin') || (permission_level == 'write')
    - name: Echo has_permissions and !has_permissions
      run: |
        echo "${{ steps.has_permissions.outputs.result }}"
        echo "${{ !steps.has_permissions.outputs.result }}"
    - name: Exit if insufficient permissions
      if: ${{ !steps.has_permissions.outputs.result }}
      run: |
        exit 1
    - name: React to comment
      uses: actions/github-script@v4
      with:
        script: |
          const {owner, repo} = context.issue;
          github.reactions.createForIssueComment({
            owner: owner,
            repo: repo,
            comment_id: context.payload.comment.id,
            content: "rocket",
          });
    - name: Get pull-request SHA
      id: sha
      uses: actions/github-script@v4
      with:
        result-encoding: string
        script: |
          const { owner, repo, number } = context.issue;
          const pr = await github.pulls.get({
            owner,
            repo,
            pull_number: number,
          });
          return pr.data.head.sha
    - name: Checkout pull-request SHA
      uses: actions/checkout@v2
      with:
        lfs: true
        ref: ${{ steps.sha.outputs.result }}
    - name: System info
      run: |
        set -x
        python --version
        uname -a
        lsb_release -a
    - name: Run test command(s)
      run: ${{ inputs.run_test }}
    - name: Message success
      if: success()
      uses: actions/github-script@v4
      with:
        script: |
          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,  
            body: `[${{ inputs.description }} succeeded ✅](https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})`,
          });
    - name: Message failure
      if: failure() && steps.has_permissions.outputs.result
      uses: actions/github-script@v4
      with:
        script: |
          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `[${{ inputs.description }} failed ❌](https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})`,
          });
